id: nrsc5_rx_nrsc5_rx
label: nrsc5_rx
category: '[nrsc5_rx]'

templates:
  imports: import nrsc5_rx
  make: nrsc5_rx.nrsc5_rx(${test})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: test
  label: Testing Parameter
  dtype: bool
  default: true
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: short
  vlen: 2
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
# disabled until I have a callback function
- label: Lout
  domain: stream
#  dtype: float
  dtype: short
  vlen: 2

#- label: Rout
#  domain: stream
#  dtype: float


#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

documentation: |-
  Currently incomplete. Audio output is disabled until I have a callback function.
  Input is complex float 16 (output of 'Complex To IShort' with 'Vector Output' on) at
  exactly 744187.5 samples/sec or complex float 8 at exactly 1488375 samples/sec.
  Output will be 44100hz? audio, possibly padded with zeros


#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
